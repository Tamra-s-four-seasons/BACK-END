spring:
  datasource:
#    url: jdbc:mysql://mysql.goormthon-6.svc.cluster.local:3306/mydb?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    url: jdbc:mysql://127.0.0.1:13306/mydb?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: myuser
    password: mypass123
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET:}      # Kakao PKCE만 쓰면 비워도 OK
            scope: profile, account_email
            redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}" #localhost -> {baseUrl}로 대체
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: profile, email
            redirect-uri: "http://localhost:8080/login/oauth2/code/google" #localhost -> {baseUrl}로 대체

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          # Google 은 기본값이 내장돼 있으므로 provider 블록 생략 가능
jwt:
  secret: ${JWT_SECRET}
  expiration-millis: 14400000          # 4 시간

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2.client: TRACE   # 토큰 요청·응답까지